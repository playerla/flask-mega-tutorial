version: '3.4'
services:
  web:
    build:
      context: .
      target: runtime-image
    ports:
      - "5000:5000"
    environment: 
      ELASTICSEARCH_URL: http://elasticsearch:9200
      DATABASE_URL: mysql+pymysql://root:$MYSQL_PW@db/microblog
      REDIS_URL: redis://redis
      MAIL_SERVER: smtp
    volumes:
      - "./google-credentials.json:/opt/microblog/google-credentials.json"
  web_worker:
    build:
      context: .
      target: runtime-image
    entrypoint: ["rq", "worker", "microblog-tasks", "-u", "redis://redis"]
    environment: 
      DATABASE_URL: mysql+pymysql://root:$MYSQL_PW@db/microblog
      MAIL_SERVER: smtp
    depends_on:
      - redis
  db:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_PW
      MYSQL_DATABASE: microblog
    volumes:
      - mysql-flask-mega-tuto:/var/lib/mysql
  migration:
    build:
      context: .
      target: runtime-image
    entrypoint: ["/bin/sh", "-c"]
    # After db upgrade, invoke flask shell to check everything is ok and call all init() functions like creating default users in database
    command: ["apk add bash && ./wait-for-it/wait-for-it.sh db:3306 -t 45 -- flask db upgrade ; flask shell"]
    depends_on:
      - db
    environment: 
      DATABASE_URL: mysql+pymysql://root:$MYSQL_PW@db/microblog
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.6.2
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
  redis:
    image: redis:6.0.5-alpine
  smtp:
    image: python:3.8-alpine
volumes:
  mysql-flask-mega-tuto: